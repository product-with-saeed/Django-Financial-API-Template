[pytest]
# Django settings
DJANGO_SETTINGS_MODULE = config.settings

# Test discovery patterns
python_files = tests.py test_*.py *_tests.py
python_classes = Test*
python_functions = test_*

# Test paths
testpaths = tests

# Command line options
addopts =
    # Verbosity
    --verbose
    --tb=short
    --strict-markers
    --strict-config

    # Coverage
    --cov=api
    --cov=config
    --cov-report=html
    --cov-report=term-missing:skip-covered
    --cov-report=xml
    --cov-fail-under=95
    --no-cov-on-fail

    # Output
    -ra
    --color=yes

    # Performance
    --reuse-db
    --maxfail=5

# Markers
markers =
    unit: Unit tests (fast, isolated)
    integration: Integration tests (slower, use database)
    slow: Slow tests (can be skipped with -m "not slow")
    security: Security-focused tests
    performance: Performance benchmarks

# Warnings
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    error::UserWarning

# Logging
log_cli = false
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Django
django_find_project = false

# Coverage
[coverage:run]
source = api,config
omit =
    */migrations/*
    tests/*
    */test_*.py
    */__pycache__/*
    */venv/*
    manage.py
    config/asgi.py
    config/wsgi.py
    **/tests.py

[coverage:report]
precision = 2
show_missing = true
skip_covered = false
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    if TYPE_CHECKING:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

[coverage:html]
directory = htmlcov
